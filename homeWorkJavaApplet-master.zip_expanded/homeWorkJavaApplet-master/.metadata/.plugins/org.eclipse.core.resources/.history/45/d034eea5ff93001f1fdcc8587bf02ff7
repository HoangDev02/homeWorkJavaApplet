/**
 * Copyright (c) 1998, 2024, Oracle and/or its affiliates. All rights reserved.
 */

package com.oracle.jcclassic.samples.helloworld;

import javacard.framework.APDU;
import javacard.framework.Applet;
import javacard.framework.ISO7816;
import javacard.framework.ISOException;
import javacard.framework.Util;

public class HelloWorld extends Applet {
    private static final byte INS_COMPARE_DATA = (byte) 0x10; // Instruction for comparing input data
    private static final byte[] TARGET_DATA = { 'D', 'A', 'T', 'A', '_', 'A', 'B', 'C', 'E' }; // Target data for comparison

    /**
     * Only this class's install method should create the applet object.
     */
    protected HelloWorld() {
        register();
    }

    /**
     * Installs this applet.
     *
     * @param bArray the array containing installation parameters
     * @param bOffset the starting offset in bArray
     * @param bLength the length in bytes of the parameter data in bArray
     */
    public static void install(byte[] bArray, short bOffset, byte bLength) {
        new HelloWorld();
    }

    /**
     * Processes an incoming APDU.
     *
     * @see APDU
     * @param apdu the incoming APDU
     * @exception ISOException with the response bytes per ISO 7816-4
     */
    @Override
    public void process(APDU apdu) {
        byte[] buffer = apdu.getBuffer();

        // Check SELECT APDU command
        if (selectingApplet()) {
            return;
        }

        byte ins = buffer[ISO7816.OFFSET_INS]; // Get the instruction byte

        // Handle instruction for comparing data
        if (ins == INS_COMPARE_DATA) {
            short bytesRead = apdu.setIncomingAndReceive();
            // Ensure the length matches
            if (bytesRead != TARGET_DATA.length) {
                ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);
            }

            // Compare the input data with TARGET_DATA
            boolean isMatch = Util.arrayCompare(buffer, ISO7816.OFFSET_CDATA, TARGET_DATA, (short) 0, bytesRead) == 0;

            // Prepare response
            apdu.setOutgoing();
            apdu.setOutgoingLength((short) 1);
            buffer[0] = (byte) (isMatch ? 0x01 : 0x00); // 0x01 for true, 0x00 for false
            apdu.sendBytes((short) 0, (short) 1);
        }
    }
}
