/** 
 * Copyright (c) 1998, 2024, Oracle and/or its affiliates. All rights reserved.
 * 
 */

package com.example.myapplet;

import javacard.framework.APDU;
import javacard.framework.Applet;
import javacard.framework.ISO7816;
import javacard.framework.ISOException;
import javacard.framework.Util;
import javacard.security.AESKey;
import javacard.security.KeyBuilder;
import javacardx.crypto.Cipher;

/**
 * Applet class
 * 
 * @author <user>
 */

public class myapplet extends Applet {
	final static byte INS_SET_TARGET_DATA = (byte) 0x30;
	final static byte INS_COMPARE_DATA = (byte) 0x10;
	final static byte INS_ENCRYPT_DATA = (byte) 0x20;
	private byte[] targetData;

	/**
	 * Installs this applet.
	 * 
	 * @param bArray  the array containing installation parameters
	 * @param bOffset the starting offset in bArray
	 * @param bLength the length in bytes of the parameter data in bArray
	 */
	public static void install(byte[] bArray, short bOffset, byte bLength) {
		new myapplet();
	}

	/**
	 * Only this class's install method should create the applet object.
	 */
	protected myapplet() {
		targetData = new byte[9];
		register();
	}

	/**
	 * Processes an incoming APDU.
	 * 
	 * @see APDU
	 * @param apdu the incoming APDU
	 */
	@Override
	public void process(APDU apdu) {
		byte[] buffer = apdu.getBuffer();

		if (selectingApplet()) {
			return;
		}

		byte ins = buffer[ISO7816.OFFSET_INS];
		switch (ins) {
		case INS_SET_TARGET_DATA:
			setTargetData(apdu, buffer);
			break;
		case INS_COMPARE_DATA:
			handleCompareData(apdu, buffer);
			break;
		default:
			ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
		}
	}
    private void setTargetData(APDU apdu, byte[] buffer) {
        short bytesRead = apdu.setIncomingAndReceive();
        if (bytesRead != 9) {
            ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);
        }
        Util.arrayCopy(buffer, ISO7816.OFFSET_CDATA, targetData, (short) 0, bytesRead);
    }

    private void handleCompareData(APDU apdu, byte[] buffer) {
        short bytesRead = apdu.setIncomingAndReceive();
        if (bytesRead != 9) {
            ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);
        }
        
        boolean isMatch = Util.arrayCompare(buffer, ISO7816.OFFSET_CDATA, targetData, (short) 0, bytesRead) == 0;

        apdu.setOutgoing();
        apdu.setOutgoingLength((short) 1);
        buffer[0] = (byte) (isMatch ? 0x01 : 0x00);
        apdu.sendBytes((short) 0, (short) 1);
    }
}
